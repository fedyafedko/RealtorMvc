@model RealtorMVC.Models.Auth.SignInModel

<div style="display: flex; justify-content: center; align-items: center; width: 100%">
    <form id="signInForm" method="post" style="display: flex; flex-direction: column; gap: 20px; width: 400px; background-color: #301403; padding: 30px 20px; margin: 20px">
        <h2 style="text-align: start; color: #F1FFE7">Welcome Back!</h2>
        <p style="text-align: start; color: #F1FFE7">Please sign in to access your account. Don't have an account? Register <a href="/Auth/SignUp" style="color: #F1FFE7">here</a>.</p>
        <div class="form-group" style="color: #F1FFE7">
            <label for="Email">Email</label>
            <input type="email" class="form-control" asp-for="Email" required />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="form-group" style="color: #F1FFE7">
            <label for="Password">Password</label>
            <input type="password" class="form-control" asp-for="Password" required />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary" style="border: 1px solid #F1FFE7; background-color: #F1FFE7; color:black">Sign In</button>
    </form>
</div>

<script>
    document.getElementById('signInForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        const formData = new FormData(this);
        const response = await fetch(this.action, {
            method: 'POST',
            body: formData,
            headers: {
                'Accept': 'application/json'
            }
        });

        const result = await response.json();

        if (result.accessToken) {
            localStorage.setItem('jwtToken', result.accessToken);
            window.location.href = '/Home';
        }
        const error = await response.json();
        alert('Error: ' + error.message);
    });
</script>
